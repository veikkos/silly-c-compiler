name: Build

on:
    push:
    pull_request:
        branches:
            - main

jobs:
    lint:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Set up Node.js
              uses: actions/setup-node@v2
              with:
                  node-version: 16

            - name: Install npm dependencies
              run: npm ci

            - name: Run linting
              run: npm run lint

    test:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Set up Node.js
              uses: actions/setup-node@v2
              with:
                  node-version: 16

            - name: Install npm dependencies
              run: npm ci

            - name: Run tests
              run: npm test

    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Set up Node.js
              uses: actions/setup-node@v2
              with:
                  node-version: 16

            - name: Install dependencies
              run: |
                  sudo apt-get update
                  sudo apt-get install -y nasm gcc-multilib
                  npm ci

            - name: Build
              run: npm run build

            - name: Compile, Assemble, Link, and Run
              run: |
                  INPUTS=("simple" "fn" "if" "if_2" "unary" "extern")

                  for FILE in "${INPUTS[@]}"; do
                      npm run start "tests/inputs/$FILE.c"
                  done

                  for FILE in "${INPUTS[@]}"; do
                      nasm -f elf32 "$FILE.asm" -o "$FILE.o"
                      gcc -m32 -o "$FILE" "$FILE.o"
                  done

                  set +e
                  for FILE in "${INPUTS[@]}"; do
                      ./"$FILE"
                      RETURN_VALUE=$?
                      if [[ $RETURN_VALUE -ne 5 ]]; then
                          echo "Unexpected return value from the $FILE executable: $RETURN_VALUE"
                          exit 1
                      fi
                  done

                  exit 0
